###############################################################################
# expect_sub.lib                                          Version : 1.0       #
#                                                                             #
# Creation Date : 24/04/2008                                                  #
# Team          : **************************************                      #
# Support mail  : arnaud@crampet.net                                           #
# Author        :  Arnaud Crampet                                             #
#                                                                             #
# Subject : This library provide sub function of expect libs                  #
#                                                                             #
###############################################################################
####
# INFO
################################################################################

############################## Reset lib function ##############################

function Expect_reset_vers
{
#|# Var to set  : None
#|#
#|# Base usage  : Expect_reset_vers
#|#
#|# Description : This function is used to reset all expect params
#|#
#|# Send Back   : empty vars for "servername user password"
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

export servername=""
export user=""
export password=""

############### Stack_TRACE_BUILDER ################
Function_PATH="$(dirname ${Function_PATH})"
####################################################
}

######################### Lib control ##########################################

function Expect_CTRL_VAR_SCP
{
#|# Var to set  : None
#|#
#|# Base usage  : Expect_CTRL_VAR_SCP
#|#
#|# Description : This function is used to check if file source and destination
#|#               are properly sets
#|#
#|# Send Back   : text output
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

Empty_Var_Control "${file_source}"   "file_source"   "ErrorN" "2" " : Mandatory parameter"

export file_source

if [ -z ${file_destination} ]
   then
       MSG_DISPLAY "Info" "file_destination enviroment var [ NOT SET ]"
       file_destination="/tmp/"
       MSG_DISPLAY "Info" "file_destination enviroment var [ SET to defaul /tmp ]"
       export file_destination
   else
       MSG_DISPLAY "Debug6" "file_destination enviroment var [ OK ]"
       export file_destination
fi

############### Stack_TRACE_BUILDER ################
Function_PATH="$(dirname ${Function_PATH})"
####################################################
}

function Expect_Base_SetEnv
{
#|# Var to set    :
#|# servername    : use this var to set on wich server to connect        ( Mandatory )
#|# user          : use this var to set wich user to use on  connect     ( Mandatory )
#|# password      : use this var to set wich password to use on  connect ( Mandatory )
#|# ROOT_Password : Use this var to set the root password for server     ( Mandatory )
#|# ${1}          : use this var to set [ servername ]                   ( Mandatory )
#|# ${2}          : use this var to set [ user ]                         ( Mandatory )
#|# ${3}          : use this var to set [ password ]                     ( Mandatory )
#|# ${4}          : use this var to set [ ROOT_Password ]                ( Optional )
#|#
#|# Base usage  : Expect_Base_SetEnv "servername" "user" "password"
#|#
#|# Description : This function is used to set/reset all Connexion parameter for
#|#               filterexpect
#|#
#|# Send Back   : Environment vars
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

servername="${1}"
MSG_DISPLAY "Debug6" "Value of servername [ ${servername} ]"
user="${2}"
MSG_DISPLAY "Debug6" "Value of user [ ${user} ]"
password="${3}"
MSG_DISPLAY "Debug6" "Value of password [ ${password} ]"
ROOT_Password="${4}"

Empty_Var_Control "${servername}"    "servername"     "ErrorN" "2" " : Mandatory parameter" "" "export servername"
Empty_Var_Control "${user}"          "user"           "ErrorN" "2" " : Mandatory parameter" "" "export user"
Empty_Var_Control "${password}"      "password"       "ErrorN" "2" " : Mandatory parameter" "" "export password"
Empty_Var_Control "${ROOT_Password}" "ROOT_Password"  "ErrorN" "0" " : Optional parameter " "Expect_Default_mode" "Expect_Root_mode"


############### Stack_TRACE_BUILDER ################
Function_PATH="$(dirname ${Function_PATH})"
####################################################
}

function Expect_Base_SetEnv_SCP
{
#|# Var to set  :
#|# servername       : use this var to set on wich server to connect
#|# user             : use this var to set wich user to use on  connect
#|# password         : use this var to set wich password to use on  connect
#|# file_source      : use this var to set wich user to use on  connect
#|# file_destination : use this var to set wich password to use on  connect
#|# ${1}             : use this var to set [ servername ]
#|# ${2}             : use this var to set [ user ]
#|# ${3}             : use this var to set [ password ]
#|# ${4}             : use this var to set [ file_source ]
#|# ${5}             : use this var to set [ file_destination ]
#|# ${6}             : use this var to set [ Send or Get ]
#|#
#|# Base usage       : Expect_Base_SetEnv_SCP "servername" "user" "password" "file source" "file destination" "Send or Get"
#|#
#|# Description      : This function is used to set/reset all Connexion parameter
#|#                    for filterexpect
#|#
#|# Send Back        : Environment vars
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "
file_source="${4}"
file_destination="${5}"
EBSES_Send_Or_Get="${6}"

Expect_Base_SetEnv "${1}" "${2}" "${3}"
MSG_DISPLAY "Debug6" "Value of file_source [ ${file_source} ]"
MSG_DISPLAY "Debug6" "Value of file_destination [ ${EBSES_user} ]"


MSG_DISPLAY "Debug6" "You have set to SCP to [ ${EBSES_Send_Or_Get} ]"
Expect_CTRL_VAR_SCP

 #Use this extern variables to determin how to do a connexion

case ${EBSES_Send_Or_Get} in
        Get|get|GET) ${Base_Dir_Scripts_Lib_Expect}/scp_get_expect.ksh
                     ;;
     Send|send|SEND) ${Base_Dir_Scripts_Lib_Expect}/scp_Send_expect.ksh
                     ;;
                  *) MSG_DISPLAY "ErrorN" "Error This case is not implemented [ ${EBSES_Send_Or_Get} ]" "2"
                     ;;
 esac

############### Stack_TRACE_BUILDER ################
Function_PATH="$(dirname ${Function_PATH})"
####################################################
}

########################## Expect mode #########################################
function Expect_Default_mode
{
#|# Var to set  : None
#|#
#|# Base usage  : Expect_Default_mode
#|#
#|# Description : This function is used to set expect in default mode
#|#
#|# Send Back   : Environment vars Used_Filter_expect
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

MSG_DISPLAY "Debug6" "Expect mode  [ Default ]"
Used_Filter_expect="${expect_default_Filter}"

############### Stack_TRACE_BUILDER ################
Function_PATH="$(dirname ${Function_PATH})"
####################################################
}

function Expect_Root_mode
{
#|# Var to set  : None
#|#
#|# Base usage  : Expect_Root_mode
#|#
#|# Description : This function is used to set expect in root mode
#|#
#|# Send Back   : Environment vars Used_Filter_expect
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

MSG_DISPLAY "Debug6" "Expect mode  [ Root ]"
Used_Filter_expect="${expect_root_filter}"
export ROOT_Password

############### Stack_TRACE_BUILDER ################
Function_PATH="$(dirname ${Function_PATH})"
####################################################
}

Sourced_OK="1"