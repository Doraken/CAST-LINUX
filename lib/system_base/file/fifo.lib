###############################################################################
# fifo.lib                                                     Version : 1.1  #
#                                                                             #
# Creation Date : 07/02/2007                                                  #
# Team          : Only me after all                                           #
# Support mail  : arnaud@crampet.net                                          #
# Author        : Arnaud Crampet      /Arnaud Crampet                         #
#                                                                             #
# Subject : This library provide base runtime to manage FIFO input and output #
#                                                                             #
###############################################################################
####
# INFO 


function FIFO_CREATE
{
#|# /**
#|#  * FIFO_CREATE
#|#  * @author Arnaud Crampet      
#|#  * @see fifo_lib::FIFO_DELETE()
#|#  * @see fifo_lib::FIFO_INIT()
#|#  * @param name		objectname 'fifo'
#|#  * @param attribut	first attribut
#|#  * @param ...		optional attribut
#|#  *
#|#  * List of attributs:
#|#  * - filename=...		the filename of fifo
#|#  * - eof="..."          end of line (used to close the fifo)
#|#  * 
#|#  * Usage:
#|#  * - Create a FIFO
#|#  *
#|#  * Examples:
#|#  * - FIFO_CREATE my_fifo filename=/tmp/my_fifo
#|#  * - FIFO_CREATE my_fifo filename=/tmp/my_fifo eof="END_OF_FILE"
#|#  **/
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "
  
  nameref self=${1}
  FIFO_INIT $@
  
  if [ "${self.filename}" = "" ]; then
     MSG_DISPLAY "ErrorN" " Fifo ${1} not defined" "1"
  fi  
  if [ -p "${self.filename}" ]; then
     MSG_DISPLAY "ErrorN" " ${self.filename} is not a fifo" "1"
  fi
  
  if mkfifo ${self.filename} 2>/dev/null; then
  	 :
  else
     MSG_DISPLAY "ErrorN" " mkfifo ${self.filename} return code $?" "1"
  fi

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

function FIFO_DELETE
{
#|# /**
#|#  * FIFO_DELETE
#|#  * @author Arnaud Crampet      
#|#  * @see fifo_lib::FIFO_CREATE()
#|#  * @param name		objectname 'fifo'
#|#  *
#|#  * Usage:
#|#  * - Delete a FIFO
#|#  *
#|#  * Examples:
#|#  * - FIFO_DELETE my_fifo
#|#  **/
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

  nameref self=${1}

  if [ "${self.filename}" = "" ]; then
     MSG_DISPLAY "ErrorN" " Fifo ${1} not defined" "1"
  fi  
  if [ ! -p "${self.filename}" ]; then
     MSG_DISPLAY "ErrorN" " ${self.filename} is not a fifo" "1"
  fi
  
  rm ${self.filename}
  unset self.filename
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

function FIFO_INIT
{
#|# /**
#|#  * FIFO_INIT
#|#  * @author Arnaud Crampet      
#|#  * @see fifo_lib::FIFO_CREATE()
#|#  * @param name		objectname 'fifo'
#|#  * @param attribut	first attribut
#|#  * @param ...		optional attribut
#|#  *
#|#  * List of attributs:
#|#  * - filename=...		the filename of fifo
#|#  * - eof="..."          end of line (used to close the fifo)
#|#  * 
#|#  * Usage:
#|#  * - Initialise a FIFO (Doesn't create the fifo file)
#|#  *
#|#  * Examples:
#|#  * - FIFO_INIT my_fifo filename=/tmp/my_fifo
#|#  * - FIFO_INIT my_fifo filename=/tmp/my_fifo eof="END_OF_FILE"
#|#  **/
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

  self=${1}; shift 
  nameref self=${self}
  eval "self=( $@ )"
  
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

function FIFO_READ
{
#|# /**
#|#  * FIFO_READ
#|#  * @author Arnaud Crampet      
#|#  * @see fifo_lib::FIFO_WRITE()
#|#  * @param name		objectname 'fifo'
#|#  *
#|#  * Usage:
#|#  * - Read a set of lines in the FIFO
#|#  *
#|#  * Examples:
#|#  * - FIFO_READ my_fifo | wc -l
#|#  **/
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "
  nameref self=${1}

  if [ "${self.filename}" = "" ]; then
    MSG_DISPLAY "ErrorN" " Fifo ${1} not defined" "1"
  fi  
  if [ ! -p "${self.filename}" ]; then
    MSG_DISPLAY "ErrorN" " ${self.filename} is not a fifo" "1"
  fi  

  while true
        do
  	       [ ! -p "${self.filename}" ] && break
           while read -u3 -- line; do
           print -- ${line}
           done < ${self.filename}
   	    sleep 2
  done
  
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

function FIFO_WRITE
{
#|# /**
#|#  * FIFO_WRITE
#|#  * @author Arnaud Crampet      
#|#  * @see fifo_lib::FIFO_READ()
#|#  * @param name		objectname 'fifo'
#|#  *
#|#  * Usage:
#|#  * - Write a set of lines in the FIFO
#|#  *
#|#  * Examples:
#|#  * -  cat - | FIFO_READ my_fifo 
#|#  **/
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

  nameref self=${1}

  if [ "${self.filename}" = "" ]; then
     MSG_DISPLAY "ErrorN" " Fifo ${1} not defined" "1"
  fi  
  if [ ! -p "${self.filename}" ]; then
     MSG_DISPLAY "ErrorN" " ${self.filename} is not a fifo" "1"
  fi  

  cat - > ${self.filename}
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

Sourced_OK="1"
