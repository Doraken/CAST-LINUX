###############################################################################
# system.lib                                         Version : 1.1            #
#                                                                             #
# Creation Date : 16/05/2007                                                  #
# Team          : Only me after all                                           #
# Support mail  : arnaud@crampet.net                                          #
# Author        : Arnaud Crampet                                              #
#                                                                             #
# Subject : This library provides base system command tunnig env              #
#                                                                             #
###############################################################################
####
# INFO 


function SYSTEM_TUNE
{
#|# Var to set   : 
#|# SYSTEM_NAME  : use this var to set system name of the current operation system
#|#
#|# Base usage   : SYSTEM_TUNE
#|#
#|# Returne : Function execution   
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

  case ${SYSTEM_NAME} in 
       Linux|linux|LINUX) print -- "Tunning scripts vars for [ ${SYSTEM_NAME} ] "
                          SYSTEM_TUNE_SUB_LINUX
                       ;;
             AIX|aix|Aix) print -- "Tunning scripts vars for [ ${SYSTEM_NAME} ] "
                          SYSTEM_TUNE_SUB_AIX
                       ;;
             SunOS|SUNOS|sunos) print -- "Tunning scripts vars for [ ${SYSTEM_NAME} ] "
                          SYSTEM_TUNE_SUB_SOLARIS
                       ;;
                       *)print -- "Not yet suppoted system [ ${SYSTEM_NAME} ] "
                         CND_SUPPORT_MSG "1"
                       ;;
  esac 
}

function SYSTEM_TUNE_SUB_LINUX 
{
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "
 
 CMD_WHO="who i am"
 CMD_UNCOMPRESS_ZIP=""
 CMD_UNCOMPRESS="tar xvzf ${OLD_PWD}/${PACKAGE} "
 CMD_RECOMPRESS_ZIP=""
 PKGFile_Type_Comp="gzip"
 PKGFile_Type_Comp_SYSSPEC="data"
 Debug_INIT

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}



function SYSTEM_TUNE_SUB_AIX
{
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "
 
 CMD_WHO="who -m"
 CMD_UNCOMPRESS_ZIP="gzip -d ${OLD_PWD}/${PACKAGE}" 
 CMD_UNCOMPRESS_TAR="tar -xvf ${OLD_PWD}/${PKG_noext}.tar"
 CMD_RECOMPRESS_ZIP="gzip ${OLD_PWD}/${PKG_noext}.tar  "
 PKGFile_Type_Comp="gzip"
 PKGFile_Type_Comp_SYSSPEC="data"
 Debug_INIT
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}

function SYSTEM_VAR_RANDOMIZER
{
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

EXTERNAL_randomized_var="${RANDOM}"
MSG_DISPLAY "Debug6" "Current Randomized VAR  : [ ${EXTERNAL_randomized_var} ] "


############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}


function system_counter
#|# system_counter_TO_init             : use this var to init counter to 0
#|# ${1}                               : use this var to set system_counter_TO_init
#|# External_Return_Counter            : is used to returne counter value
#|# Basic use                          : system_counter_TO_init "[ To init ]"
{
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "
system_counter_TO_init="${1}"
External_Return_Counter="0" 
if [ "${system_counter_TO_init}" = "init" ]
   then 
   	   Internal_var_count="0"
   else
       Internal_var_count="$( expr ${Internal_var_count} + 1 )"
fi 
External_Return_Counter="${Internal_var_count}"       


############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################	
} 

Sourced_OK="1"
