###############################################################################
#  compile_sub.lib                                         Version : 1.1.2.2  #
#                                                                             #
# Creation Date : 19/11/2006                                                  #
# Team          : Only me after all                                           #
# Support mail  : arnaud@crampet.net                                          #
# Author        : Arnaud Crampet                                              #
#                                                                             #
# Subject : This library provide sub   compilation functions                  #
#                                                                             #
###############################################################################
####
# INFO


function COMPILE_Make_Package_SUB
{
#|# Var to set  :
#|# Base_Param_Make_Options            : Use this var to set option given to make
#|#
#|# Base usage  : COMPILE_Make_Package_SUB
#|#
#|# Description : This is a Sub function of COMPILE_Generics_Base_func
#|#               don't call it directly
#|#
#|# Send Back   : compiled data
#|#
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "


Generic_Base_Param_MSG="Make of Package ${Base_Param_PKG_To_Compile} "
if [ "${Base_Param_Make_Options}" = "Dummy" ]
   then
       MSG_DISPLAY "Info"   "Option parameter for Make : [ NONE ] "
       MSG_DISPLAY "Debug2" "make commande             : [ make ] "
       make   2>&1 1>> ${FINAL_OUTPUT_REDIRECTOR}
   else
       MSG_DISPLAY "Info"   "Option parameter for Make : [ ${Base_Param_Make_Options} ] "
       MSG_DISPLAY "Debug2" "make commande             : [ make ${Base_Param_Make_Options} ] "
       make ${Base_Param_Make_Options}  2>&1 1>> ${FINAL_OUTPUT_REDIRECTOR}
fi
CTRL_Result_func "${?}" "Check Result of Make for [ ${Base_Param_PKG_To_Compile} ] " "for option : [ ${Base_Param_Make_Options} ] " "1"
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}



function COMPILE_Make_install_SUB
{
#|# Var to set  :
#|# Base_Param_Make_Install_Options   : Use this var to set optin given to make install
#|#
#|# Base usage  : COMPILE_Make_install_SUB
#|#
#|# Description : This is a Sub function of COMPILE_Generics_Base_func
#|#               Do not use out of this main function
#|#
#|# Send Back   : installed application
#|#
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "


Generic_Base_Param_MSG="Install of Package ${Base_Param_PKG_To_Compile} "
if [ "${Base_Param_Make_Install_Options}" = "Dummy" ]
   then
       MSG_DISPLAY "Info"   "Option parameter for Make : [ NONE ] "
       MSG_DISPLAY "Debug2" "make install commande     : [ make install ] "
       make install  2>&1 1>> ${FINAL_OUTPUT_REDIRECTOR}
  else
      MSG_DISPLAY "Info" "Option parameter for Make : [ ${Base_Param_Make_Install_Options} ] "
      MSG_DISPLAY "Debug2" " make install commande  : [ make ${Base_Param_Make_Install_Options} ] "
      make ${Base_Param_Make_Install_Options}  2>&1 1>> ${FINAL_OUTPUT_REDIRECTOR}
fi
CTRL_Result_func "${?}" "Check Result of Make install for [ ${Base_Param_PKG_To_Compile} ] " "" "1"
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}

function COMPILE_Make_Clean_SUB
{
#|# Var to set  :
#|# Base_Param_Make_clean    : Use this var to set options given to make clean
#|#
#|# Base usage  : COMPILE_Make_Clean_SUB
#|#
#|# Description : This is a Sub function of COMPILE_Generics_Base_func
#|#               Do not use out of this main function
#|#
#|# Send Back   : cleaned sources
#|#
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "


Generic_Base_Param_MSG="Make Clean of Package ${Base_Param_PKG_To_Compile} "
case ${Base_Param_Make_clean} in
     Dummy | False ) MSG_DISPLAY "Info" "Option for Make : [ NONE ] "
                     ;;
              TRUE ) MSG_DISPLAY "Info" "Option for Make : [ TRUE ] "
                     make clean  2>&1 1>> ${FINAL_OUTPUT_REDIRECTOR}
                     ;;
                 * ) MSG_DISPLAY "ErrorN" " Error during you don t set Base_Param_Make_clean : [ PIG ERROR ]" "2"
                     ;;
esac
CTRL_Result_func "${?}" "Check Result of Make Clean for [ ${Base_Param_PKG_To_Compile} ] " "" "1"

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}


function  COMPILE_Post_Compile_Action_SUB
{
#|# Var to set  :
#|# Base_Param_Post_Compile_Action : Use this var to set function call after compile
#|#
#|# Base usage  : COMPILE_Post_Compile_Action_SUB
#|#
#|# Description : This is a Sub function of COMPILE_Generics_Base_func
#|#               Do not use out of this main function
#|#
#|# Send Back   : post compilation actions
#|#
############ STACK_TRACE_BUILDER #####################
Function_Name="${0}"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "


if [ "${Base_Param_Post_Compile_Action}" = "Dummy" ]
   then
       MSG_DISPLAY "Info" "tions : [ NONE ] "
   else
       MSG_DISPLAY "Info" "Post install actions : [ Starting ] "
       ${Base_Param_Post_Compile_Action}
       MSG_DISPLAY "Info" "Post install actions  [ Ending ] "

fi

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}

########################### Configurtion checks ################################

function PKG_INSTALL_CTRL_Sourcing_PKG_CONF
{
#|# Var to set  : None
#|#
#|# Base usage  : packages_version_config
#|#
#|# Description :  This function is used to Source package config File
#|#
#|# Send Back   : Sourced parameter file
#|#
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug4" "Current Stack : [ ${Function_PATH} ] "

if [ "${Package_Configuration}" = "OK" ]
   then
       MSG_DISPLAY "Debug5" "Sourcing Of  Package_Configuration_File  : [ OK ] "
   else
       MSG_DISPLAY "Debug5" "Sourcing Of  Package_Configuration_File  : [ NOK ] "
       MSG_DISPLAY "Debug6" "File is   : [ ${Package_Configuration_File} ] "
       MSG_DISPLAY "Debug6" "PATH is   : [ ${Base_Dir_Scripts_CNF} ] "
       File_Ctrl_Sourcing  ${Package_Configuration_File} ${Base_Dir_Scripts_CNF_spec} ${ATD_for_Package_Configuration_CNF}
fi
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}

Sourced_OK="1"
