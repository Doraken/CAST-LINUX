###############################################################################
# rpm.lib                                                  Version : 1.1.2.2  #
#                                                                             #
# Creation Date : 24/05/2007                                                  #
# Team          : Only me after all                                           #
# Support mail  : arnaud@crampet.net                                          #
# Author        : Arnaud Crampet                                              #
#                                                                             #
# Subject : This library provide base runtime to manage rpm                   #
#                                                                             #
###############################################################################
####
# INFO 

function rpm_get_installed_package
{
#|# Var to set : None
#|#
#|# Base usage : rpm_get_installed_package 
#|#
#|# Description : This function is used to change base system calling method 
#|#               to adapt them to the current OS 
#|# Send Back   : 
#|# RPM_SEND_BACK_LIST        : this var is used to send back liste of all installed RPM 
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

if [ "${RPM_QUERY_executed}" = "1" ]
then 
	MSG_DISPLAY "Debug6" "RPM Query : [ Already Done ] "
else 
    MSG_DISPLAY "Debug6" "RPM Query : [ Launched ] "
    Generic_Base_Param_MSG="RPM Query"
    Generic_Base_Param_MSG_ERR="Check if you have the correct right to do this"
    rpm -qa >> /dev/null 
    CTRL_Result_func "${?}" "Check for RPM list query " "Check in RPM db is OK" "1"
    for RPMS in $( rpm -qa ) 
        do 
          RPM_list="${RPMS} \n ${RPM_list}"
    done 
    
    set -A RPM_SEND_BACK_LIST $( echo  "${RPM_list}" ) 
    for Item_listed in ${RPM_SEND_BACK_LIST[@]} 
       do 
       	  MSG_DISPLAY "Debug6" "Found RMP package : [ ${Item_listed} ]" 
    done 
    MSG_DISPLAY "Debug6" "RPM Query : [ Done ] "
fi 
RPM_QUERY_executed="1"
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

function select_RPM_from_list
{
#|# RPM_SEND_BACK_LIST        : this var is used to send back liste of all installed RPM 
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

rpm_get_installed_package
#print "${RPM_SEND_BACK_LIST}"
Menu_Build  

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

function rpm_select_to_delete
{
#|# RPM_to_DELETE        : this var is used to selecte which rpm to delete  
############ STACK_TRACE_BUILDER #####################
Function_Name="$0"
Function_PATH="${Function_PATH}/${Function_Name}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "
set -A Configuration_delete_rpm 'Menu choos rpm to delete:'                           \
     'CHANGE RPM_to_DELETE=[${RPM_to_DELETE}]' \
     'select_RPM_from_list' 

Menu_Build Configuration_delete_rpm
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
}

Sourced_OK="1"  
